{"ast":null,"code":"var _jsxFileName = \"/home/trungnb/baitap/baitap/tic-tac-toe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // class Square extends React.Component {\n//     render() {\n//         return (\n//         <button className=\"square\" \n//             onClick={() => this.props.onClick()}>\n//             {this.props.value}\n//         </button>\n//         );\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar toogleHis = false;\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: props.winner ? 'square winner' : 'square',\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    const winnerRow = this.props.winner;\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      winner: winnerRow != null && winnerRow.includes(i) ? true : false\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    const arrayX = [1, 2, 3];\n    const arrayY = [1, 2, 3];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: arrayY.map(y => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: arrayX.map(x => this.renderSquare(x * y + (y - 1) * (3 - x) - 1))\n      }, y, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        pos: '',\n        isWinner: 'false'\n      }],\n      xIsNext: true,\n      stepNumber: 0\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const pos = getPos(i + 1);\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O'; //const winner = calculateWinner(squares);\n    //alert(winner);\n\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        pos: pos\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  toogle() {\n    toogleHis = !toogleHis;\n    this.forceUpdate();\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const showHistory = toogleHis ? history.slice().reverse() : history;\n    const moves = showHistory.map((step, index) => {\n      const indexReverse = toogleHis ? Math.abs(index - (history.length - 1)) : index;\n      let desc = '';\n      let lastClass = '';\n\n      if (toogleHis) {\n        lastClass = index === 0 ? 'last-step' : 'step';\n        desc = index === history.length - 1 ? 'Go to game start' : 'Go to move #' + indexReverse;\n      } else {\n        lastClass = index + 1 === history.length ? 'last-step' : 'step';\n        desc = index ? 'Go to move #' + index : 'Go to game start';\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: lastClass,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(indexReverse),\n          children: [\" \", desc, \" \", step.pos, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + current.squares[winner[0]];\n    } else {\n      const endGame = current.squares.includes(null) ? false : true;\n\n      if (endGame) {\n        status = 'The game draw';\n      } else {\n        status = 'The next player is ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i),\n          winner: winner\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.toogle();\n            },\n            children: \" Toogle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 22\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [moves, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 190,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      //return squares[a];\n      return lines[i];\n    }\n  }\n\n  return null;\n}\n\nfunction getXPos(index) {\n  let xPos = index % 3;\n\n  if (xPos === 0) {\n    xPos = 3;\n  }\n\n  return xPos;\n}\n\nfunction getYPos(index) {\n  return Math.ceil(index / 3);\n}\n\nfunction getPos(index) {\n  return 'X:' + getXPos(index) + ' Y:' + getYPos(index);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/home/trungnb/baitap/baitap/tic-tac-toe/src/index.js"],"names":["React","ReactDOM","toogleHis","Square","props","winner","onClick","value","Board","Component","renderSquare","i","winnerRow","squares","includes","render","arrayX","arrayY","map","y","x","Game","constructor","state","history","Array","fill","pos","isWinner","xIsNext","stepNumber","handleClick","slice","current","length","getPos","calculateWinner","setState","concat","jumpTo","step","toogle","forceUpdate","showHistory","reverse","moves","index","indexReverse","Math","abs","desc","lastClass","status","endGame","document","getElementById","lines","a","b","c","getXPos","xPos","getYPos","ceil"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css'\n\n\n// class Square extends React.Component {\n//     render() {\n//         return (\n//         <button className=\"square\" \n//             onClick={() => this.props.onClick()}>\n//             {this.props.value}\n//         </button>\n//         );\n//     }\n// }\n\nvar toogleHis = false;\n\nfunction Square(props) {\n    return (\n        <button \n            className={props.winner ? 'square winner' : 'square'}\n            onClick={props.onClick}>\n            {props.value}\n        </button>\n    );\n}\n\nclass Board extends React.Component {\n\n    renderSquare(i) {\n        const winnerRow = this.props.winner;\n\n        return <Square \n            value={this.props.squares[i]}\n            key={i}\n            onClick={() => this.props.onClick(i)}\n            winner={ winnerRow != null && winnerRow.includes(i) ? true : false} />;\n    }\n\n    render() {\n\n        const arrayX = [1, 2, 3];\n        const arrayY = [1, 2, 3];\n\n\n        return (\n            <div>\n                {\n                    arrayY.map(y => ( \n                        <div className=\"board-row\" key={y}>\n                            {\n                                arrayX.map(x => (\n                                    this.renderSquare(x*y + (y-1) * (3-x) - 1)\n                                ))\n                            }\n                        </div>\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\n\nclass Game extends React.Component {\n    constructor (props) {\n        super(props);\n\n        this.state ={\n            history: [{\n                squares: Array(9).fill(null),\n                pos: '',\n                isWinner: 'false',\n            }],\n            xIsNext: true,\n            stepNumber: 0,\n        }\n    }\n    \n\n    handleClick (i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n\n        const pos = getPos(i + 1);\n\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n\n        //const winner = calculateWinner(squares);\n\n        //alert(winner);\n\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n                pos: pos,\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        });\n    }\n\n    toogle() {\n        toogleHis = !toogleHis;\n\n        this.forceUpdate();\n    }\n\n    render() {\n\n        const history  = this.state.history;\n\n        const current = history[this.state.stepNumber];\n        \n        const winner = calculateWinner(current.squares);\n\n        const showHistory = toogleHis ? history.slice().reverse() : history;\n\n        const moves = showHistory.map((step, index) => {\n\n            const indexReverse = toogleHis ? Math.abs(index - (history.length - 1)) : index;\n\n            let desc = '';\n            let lastClass = '';\n\n            if (toogleHis) {\n                lastClass = index === 0 ? 'last-step' : 'step';\n                desc = index === (history.length - 1) ? 'Go to game start' : 'Go to move #' + indexReverse;\n            } else {\n                lastClass = (index + 1 === history.length) ? 'last-step' : 'step';\n                desc = index ? 'Go to move #' + index : 'Go to game start';\n            }\n            \n            return (\n                <li key={index} className={ lastClass }>\n                    <button onClick={() => this.jumpTo(indexReverse)}> {desc} { step.pos } </button>\n                </li>\n            );\n\n        });\n        \n        let status;\n\n        if (winner) {\n            status = 'Winner: ' + current.squares[winner[0]];\n        } else {\n            const endGame = current.squares.includes(null) ? false : true;\n\n            if (endGame) {\n                status = 'The game draw';\n            } else {\n                status = 'The next player is ' + (this.state.xIsNext ? 'X' : 'O');\n            }\n        }\n\n        return (\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board squares={current.squares}\n                           onClick={(i) => this.handleClick(i)}\n                           winner={winner}\n                    />\n                </div>\n                <div className=\"game-info\">\n                <div>{ status }</div>\n                <ol> <button onClick={() => {this.toogle()}}> Toogle</button> </ol>\n                <ol>{ moves } </ol>\n                </div>\n            </div>\n        );\n    }\n}\n  \n  \nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n  \nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            //return squares[a];\n            return lines[i];\n        }\n    }\n\n    return null;\n}\n\nfunction getXPos(index) {\n    let xPos = index % 3;\n\n    if (xPos === 0) {\n        xPos = 3;\n    }\n\n    return xPos;\n}\n\nfunction getYPos(index) {\n    return Math.ceil(index/3);  \n}\n\nfunction getPos(index) {\n    return 'X:' + getXPos(index) + ' Y:' + getYPos(index);\n}"]},"metadata":{},"sourceType":"module"}